import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import stylesAdmin from "../styles/admin.module.css";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import { ButtonComponent } from "my-lib-ui";
import { ColumnsType, ColumnType } from "antd/lib/table";
import { Modal, Table } from "antd";
import { WarningTwoTone, CheckCircleTwoTone } from "@ant-design/icons";
import { getUsers, valideUserRequest } from "./api/user";

type dataType = {
  id: number;
  validee: boolean;
  type: string;
  nom: string;
  prenom: string;
  email: string;
  numero: string;
  nationalite: string;
};
export default function Home() {
  const router = useRouter();
  const [dataSource, setDataSource] = useState<dataType[]>([]);
  const [update, setUpdate] = useState<number>(0);
  const [columns] = useState<ColumnsType<dataType>>([
    {
      title: "Valider",
      key: "valide",
      render: (_, { validee }) => {
        return validee ? (
          <div>
            <CheckCircleTwoTone twoToneColor="#52c41a" className="large" />
            <span className="ml-2 bold">Validé</span>
          </div>
        ) : (
          <div>
            <WarningTwoTone twoToneColor="#ffc107" className="large" />
            <span className="ml-2 bold">En attente</span>
          </div>
        );
      },
    },
    {
      title: "Type",
      dataIndex: "type",
      key: "type",
    },
    {
      title: "Nom",
      key: "nom",
      render: (_, { nom, prenom }) => {
        return (
          <span>
            {nom} - {prenom}
          </span>
        );
      },
    },
    {
      title: "Email",
      dataIndex: "email",
      key: "email",
    },
    {
      title: "Numéro",
      dataIndex: "numero",
      key: "numero",
    },
    {
      title: "Nationalité",
      dataIndex: "nationalite",
      key: "nationalite",
    },
    {
      title: "Action",
      key: "action",
      render: (_, { id, validee, nom }) => {
        return validee ? (
          <ButtonComponent
            style={{
              backgroundColor: "#000000",
              fontSize: "0.75rem",
              height: "30px",
              borderRadius: "3px",
              color: "white",
            }}
          >
            Editer
          </ButtonComponent>
        ) : (
          <ButtonComponent
            onClick={() => validateUser(id)}
            style={{
              backgroundColor: "#C00000",
              fontSize: "0.75rem",
              height: "30px",
              borderRadius: "3px",
              color: "white",
            }}
          >
            Valider
          </ButtonComponent>
        );
      },
    },
  ]);

  const validateUser = (id: number) => {
    Modal.info({
      title: "Validation de l'utilisateur",
      content: <div>Voulez vous validé cet utilisateur ?</div>,
      onOk: () => HandleSubmit(id),
    });
  };
  const HandleSubmit = (id: number) => {
    const _token = localStorage.getItem("token");
    if (_token) {
      valideUserRequest(_token, id).then((_data: any) => {
        const { user } = _data;
        if (user.id) {
          setUpdate(id);
        }
      });
    }
  };
  useEffect(() => {
    if (update) {
      setDataSource(
        dataSource.map((data) =>
          data.id === update ? { ...data, validee: true } : data
        )
      );
      setUpdate(0);
    }
  }, [update, dataSource]);

  useEffect(() => {
    const _token = localStorage.getItem("token");
    if (_token) {
      getUsers(_token)
        .then((res) => {
          const { users } = res;
          if (users) setDataSource(users.reverse());
          else router.push("/connexion");
        })
        .catch((err) => console.log("erro", err));
    } else {
      router.push("/connexion");
    }
  }, []);

  return (
    <div className={styles.container}>
      <Head>
        <title>Final project</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <nav className="navbar">
        <div className={styles.logo}>
          <Image
            src="/logo_eval.png"
            alt="Vercel Logo"
            className={styles.logo_image}
            width={100}
            height={200}
          />
        </div>
        <div></div>
        <ButtonComponent onClick={() => router.push("/connexion")}>
          Connexion admin
        </ButtonComponent>
      </nav>
      <div className={stylesAdmin.container}>
        <h1>Admin page</h1>
        <div className={stylesAdmin.tablesDiv}>
          <div>
            <h2>Utilisateurs</h2>
            <Table
              className={stylesAdmin.table}
              dataSource={dataSource}
              columns={columns}
              rowKey="id"
              pagination={{ pageSize: 5 }}
            />
          </div>
        </div>
      </div>

      <footer className="footer">
        <ul>
          <li>Contact</li>
          <li>Conditions généralespdf</li>
        </ul>
        <p>RIDE 2022 - tout droits reservés</p>
      </footer>
    </div>
  );
}
